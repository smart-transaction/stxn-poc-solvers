{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_callbreaker",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_disbursalContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertFutureCallTo",
      "inputs": [
        {
          "name": "callObj",
          "type": "tuple",
          "internalType": "struct CallObject",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "callvalue",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "hintdex",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertFutureCallTo",
      "inputs": [
        {
          "name": "callObj",
          "type": "tuple",
          "internalType": "struct CallObject",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "callvalue",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertNextCallTo",
      "inputs": [
        {
          "name": "callObj",
          "type": "tuple",
          "internalType": "struct CallObject",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "callvalue",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "backrunBlocker",
      "inputs": [],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "callbreaker",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract CallBreaker"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "callbreakerAddress",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "disbursalContract",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDisbursalContract"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "disburseKITNs",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "frontrunBlocker",
      "inputs": [],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentExecutingPair",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CallObject",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "gas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "addr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "callvalue",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ReturnObject",
          "components": [
            {
              "name": "returnvalue",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEthSignedMessageHash",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSampleDisbursalData",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct KITNDisburmentScheduler.DisbursalData",
          "components": [
            {
              "name": "receivers",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "amounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setContinue",
      "inputs": [
        {
          "name": "_shouldContinue",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "shouldContinue",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "soloExecuteBlocker",
      "inputs": [],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifySignature",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FutureCallExpected",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IllegalBackrun",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IllegalFrontrun",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotApproved",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PortalClosed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Unaudited",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f80fd5b5060405161196938038061196983398101604081905261002e91610144565b826001600160a01b03811661005657604051639fabe1c160e01b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b039290921691909117905561008461007f3390565b6100d8565b600280546001600160a01b038086166001600160a01b03199283161790925560038054928516929091169190911790556001805460ff60a01b1916600160a01b1790556100d0816100d8565b505050610184565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811461013f575f80fd5b919050565b5f805f60608486031215610156575f80fd5b61015f84610129565b925061016d60208501610129565b915061017b60408501610129565b90509250925092565b6117d8806101915f395ff3fe608060405234801561000f575f80fd5b506004361061011c575f3560e01c8063aeec0501116100a9578063ceb527bc1161006e578063ceb527bc14610226578063f2fde38b14610239578063f320d0a91461024c578063f80af9841461025e578063f9aea46614610271575f80fd5b8063aeec0501146101cc578063b2102523146101f0578063b5ba436214610203578063c6a02b7d1461020b578063cd00534714610213575f80fd5b80635dccf4c4116100ef5780635dccf4c414610171578063715018a614610179578063801e0f42146101815780638da5cb5b14610194578063921a62e2146101b9575f80fd5b806306da6b6d146101205780631db72bc91461013557806321a88409146101545780635075e4b214610169575b5f80fd5b61013361012e366004610ecb565b610292565b005b61013d6102b8565b60405161014b929190610f61565b60405180910390f35b61015c6103d7565b60405161014b9190610f98565b61013361043d565b61013361044f565b610133610558565b61013361018f3660046111bf565b610569565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161014b565b6101336101c7366004611200565b6106bf565b6001546101e090600160a01b900460ff1681565b604051901515815260200161014b565b6101336101fe366004611200565b6107fc565b610133610941565b6101336109d1565b6002546101a1906001600160a01b031681565b6003546101a1906001600160a01b031681565b610133610247366004611231565b610b6c565b5f546101a1906001600160a01b031681565b61013361026c36600461124c565b610bea565b61028461027f3660046112b8565b610cf2565b60405190815260200161014b565b61029a610d21565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6102e960405180608001604052805f81526020015f81526020015f6001600160a01b03168152602001606081525090565b6040805160208082018352606082525f8054845163145f1c8960e31b81529451939491936001600160a01b039091169263a2f8e44892600480820193918290030181865afa15801561033d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036191906112e9565b5f54604051632f7ce47360e21b8152600481018390529192506001600160a01b03169063bdf391cc906024015f60405180830381865afa1580156103a7573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103ce91908101906113b2565b92509250509091565b60408051808201825260608082526020820152815160018184018181526080830190945291929091829190816020016020820280368337505050815260408051600180825281830190925260209283019290919080830190803683375050509052919050565b610445610941565b61044d61044f565b565b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c391906112e9565b5f805460405163631d606160e11b81526004810184905292935090916001600160a01b039091169063c63ac0c290602401602060405180830381865afa15801561050f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053391906112e9565b905080156105545760405163d1cb360d60e01b815260040160405180910390fd5b5050565b610560610d21565b61044d5f610d7b565b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105dd91906112e9565b90505f836040516020016105f1919061146f565b60408051808303601f190181529082905280516020909101205f8054630213637b60e51b845260048401879052919350916001600160a01b039091169063426c6f60906024016040805180830381865afa158015610651573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106759190611481565b5190508284116106985760405163ab63c58360e01b815260040160405180910390fd5b8181146106b85760405163a7ee168560e01b815260040160405180910390fd5b5050505050565b5f8054604051631ae7330560e11b81526001600160a01b03909116906335ce660a906106ef90859060040161146f565b5f60405180830381865afa158015610709573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107309190810190611539565b90505f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a691906112e9565b90505f5b82518110156107e257818382815181106107c6576107c661156a565b602002602001015111156107da5750505050565b6001016107aa565b5060405163ab63c58360e01b815260040160405180910390fd5b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087091906112e9565b90505f82604051602001610884919061146f565b60408051601f1981840301815291905280516020909101205f8054919250906001600160a01b031663426c6f606108bc85600161157e565b6040518263ffffffff1660e01b81526004016108da91815260200190565b6040805180830381865afa1580156108f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109189190611481565b51905081811461093b5760405163a7ee168560e01b815260040160405180910390fd5b50505050565b5f8054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b391906112e9565b1561044d57604051631efbf1ab60e11b815260040160405180910390fd5b604051704b49544e44697362757273616c4461746160781b60208201525f9060310160408051808303601f19018152908290528051602090910120600254631ce5445760e11b8352600483018290529092505f916001600160a01b03909116906339ca88ae906024015f60405180830381865afa158015610a54573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610a7b91908101906115a3565b90505f81806020019051810190610a9291906115d4565b6003548151602083015160405163084c362760e21b81529394506001600160a01b0390921692632130d89c92610acb92916004016116c8565b5f604051808303815f87803b158015610ae2575f80fd5b505af1158015610af4573d5f803e3d5ffd5b505050505f60405180608001604052805f8152602001620f42408152602001306001600160a01b0316815260200184604051602401610b339190611751565b60408051601f198184030181529190526020810180516001600160e01b0316633e02be6160e21b1790529052905061093b816001610569565b610b74610d21565b6001600160a01b038116610bde5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610be781610d7b565b50565b5f610c2983838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610cf292505050565b90505f604051602001610c539070436c65616e4170705369676e617475726560781b815260110190565b60408051808303601f19018152908290528051602090910120600254631ce5445760e11b8352600483018290529092505f916001600160a01b03909116906339ca88ae906024015f60405180830381865afa158015610cb4573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610cdb91908101906115a3565b90505f610ce88483610dcc565b5050505050505050565b5f81604051602001610d049190611763565b604051602081830303815290604052805190602001209050919050565b6001546001600160a01b0316331461044d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bd5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f808251604103610e00576020830151604084015160608501515f1a610df487828585610e0e565b94509450505050610e07565b505f905060025b9250929050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e4357505f90506003610ec2565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e94573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610ebc575f60019250925050610ec2565b91505f90505b94509492505050565b5f60208284031215610edb575f80fd5b81358015158114610eea575f80fd5b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b805182526020810151602083015260018060a01b0360408201511660408301525f606082015160806060850152610f596080850182610ef1565b949350505050565b604081525f610f736040830185610f1f565b8281036020840152835160208252610f8e6020830182610ef1565b9695505050505050565b602080825282516040838301528051606084018190525f929190910190829060808501905b80831015610fe85783516001600160a01b031682526020938401936001939093019290910190610fbd565b50602086810151868303601f1901604088015280518084529082019450910191505f905b8082101561102f578351835260208301925060208401935060018201915061100c565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156110705761107061103a565b60405290565b604080519081016001600160401b03811182821017156110705761107061103a565b604051601f8201601f191681016001600160401b03811182821017156110c0576110c061103a565b604052919050565b6001600160a01b0381168114610be7575f80fd5b5f6001600160401b038211156110f4576110f461103a565b50601f01601f191660200190565b5f82601f830112611111575f80fd5b813561112461111f826110dc565b611098565b818152846020838601011115611138575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60808284031215611164575f80fd5b61116c61104e565b82358152602080840135908201529050604082013561118a816110c8565b604082015260608201356001600160401b038111156111a7575f80fd5b6111b384828501611102565b60608301525092915050565b5f80604083850312156111d0575f80fd5b82356001600160401b038111156111e5575f80fd5b6111f185828601611154565b95602094909401359450505050565b5f60208284031215611210575f80fd5b81356001600160401b03811115611225575f80fd5b610f5984828501611154565b5f60208284031215611241575f80fd5b8135610eea816110c8565b5f806020838503121561125d575f80fd5b82356001600160401b03811115611272575f80fd5b8301601f81018513611282575f80fd5b80356001600160401b03811115611297575f80fd5b8560208284010111156112a8575f80fd5b6020919091019590945092505050565b5f602082840312156112c8575f80fd5b81356001600160401b038111156112dd575f80fd5b610f5984828501611102565b5f602082840312156112f9575f80fd5b5051919050565b5f82601f83011261130f575f80fd5b815161131d61111f826110dc565b818152846020838601011115611331575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f6020828403121561135d575f80fd5b604051602081016001600160401b038111828210171561137f5761137f61103a565b806040525080915082516001600160401b0381111561139c575f80fd5b6113a885828601611300565b8252505092915050565b5f80604083850312156113c3575f80fd5b82516001600160401b038111156113d8575f80fd5b8301608081860312156113e9575f80fd5b6113f161104e565b8151815260208083015190820152604082015161140d816110c8565b604082015260608201516001600160401b0381111561142a575f80fd5b61143687828501611300565b606083015250809350505060208301516001600160401b03811115611459575f80fd5b6114658582860161134d565b9150509250929050565b602081525f610eea6020830184610f1f565b5f6040828403128015611492575f80fd5b5061149b611076565b825181526020928301519281019290925250919050565b5f6001600160401b038211156114ca576114ca61103a565b5060051b60200190565b5f82601f8301126114e3575f80fd5b81516114f161111f826114b2565b8082825260208201915060208360051b860101925085831115611512575f80fd5b602085015b8381101561152f578051835260209283019201611517565b5095945050505050565b5f60208284031215611549575f80fd5b81516001600160401b0381111561155e575f80fd5b610f59848285016114d4565b634e487b7160e01b5f52603260045260245ffd5b8082018082111561159d57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f602082840312156115b3575f80fd5b81516001600160401b038111156115c8575f80fd5b610f5984828501611300565b5f602082840312156115e4575f80fd5b81516001600160401b038111156115f9575f80fd5b82016040818503121561160a575f80fd5b611612611076565b81516001600160401b03811115611627575f80fd5b8201601f81018613611637575f80fd5b805161164561111f826114b2565b8082825260208201915060208360051b850101925088831115611666575f80fd5b6020840193505b82841015611691578351611680816110c8565b82526020938401939091019061166d565b845250505060208201516001600160401b038111156116ae575f80fd5b6116ba868285016114d4565b602083015250949350505050565b604080825283519082018190525f9060208501906060840190835b8181101561170a5783516001600160a01b03168352602093840193909201916001016116e3565b5050838103602080860191909152855180835291810192508501905f5b81811015611745578251845260209384019390920191600101611727565b50919695505050505050565b602081525f610eea6020830184610ef1565b7f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525f82518060208501601c85015e5f9201601c019182525091905056fea26469706673582212202bef3e08652848ba868b83d225947f1d2fe4410d45d8554e24df67abd139a95964736f6c634300081a0033",
    "sourceMap": "893:2589:57:-:0;;;1171:293;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1265:12;-1:-1:-1;;;;;1474:26:54;;1470:77;;1523:13;;-1:-1:-1;;;1523:13:54;;;;;;;;;;;1470:77;1557:11;:48;;-1:-1:-1;;;;;;1557:48:54;-1:-1:-1;;;;;1557:48:54;;;;;;;;;;936:32:26;955:12;719:10:31;;640:96;955:12:26;936:18;:32::i;:::-;1289:18:57::1;:33:::0;;-1:-1:-1;;;;;1289:33:57;;::::1;-1:-1:-1::0;;;;;;1289:33:57;;::::1;;::::0;;;1332:17:::1;:58:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1289:33;1400:21;;-1:-1:-1;;;;1400:21:57::1;-1:-1:-1::0;;;1400:21:57::1;::::0;;1431:26:::1;1450:6:::0;1431:18:::1;:26::i;:::-;1171:293:::0;;;893:2589;;2426:187:26;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:177:62:-;93:13;;-1:-1:-1;;;;;135:31:62;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;893:2589:57;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b506004361061011c575f3560e01c8063aeec0501116100a9578063ceb527bc1161006e578063ceb527bc14610226578063f2fde38b14610239578063f320d0a91461024c578063f80af9841461025e578063f9aea46614610271575f80fd5b8063aeec0501146101cc578063b2102523146101f0578063b5ba436214610203578063c6a02b7d1461020b578063cd00534714610213575f80fd5b80635dccf4c4116100ef5780635dccf4c414610171578063715018a614610179578063801e0f42146101815780638da5cb5b14610194578063921a62e2146101b9575f80fd5b806306da6b6d146101205780631db72bc91461013557806321a88409146101545780635075e4b214610169575b5f80fd5b61013361012e366004610ecb565b610292565b005b61013d6102b8565b60405161014b929190610f61565b60405180910390f35b61015c6103d7565b60405161014b9190610f98565b61013361043d565b61013361044f565b610133610558565b61013361018f3660046111bf565b610569565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161014b565b6101336101c7366004611200565b6106bf565b6001546101e090600160a01b900460ff1681565b604051901515815260200161014b565b6101336101fe366004611200565b6107fc565b610133610941565b6101336109d1565b6002546101a1906001600160a01b031681565b6003546101a1906001600160a01b031681565b610133610247366004611231565b610b6c565b5f546101a1906001600160a01b031681565b61013361026c36600461124c565b610bea565b61028461027f3660046112b8565b610cf2565b60405190815260200161014b565b61029a610d21565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6102e960405180608001604052805f81526020015f81526020015f6001600160a01b03168152602001606081525090565b6040805160208082018352606082525f8054845163145f1c8960e31b81529451939491936001600160a01b039091169263a2f8e44892600480820193918290030181865afa15801561033d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036191906112e9565b5f54604051632f7ce47360e21b8152600481018390529192506001600160a01b03169063bdf391cc906024015f60405180830381865afa1580156103a7573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103ce91908101906113b2565b92509250509091565b60408051808201825260608082526020820152815160018184018181526080830190945291929091829190816020016020820280368337505050815260408051600180825281830190925260209283019290919080830190803683375050509052919050565b610445610941565b61044d61044f565b565b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561049f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c391906112e9565b5f805460405163631d606160e11b81526004810184905292935090916001600160a01b039091169063c63ac0c290602401602060405180830381865afa15801561050f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053391906112e9565b905080156105545760405163d1cb360d60e01b815260040160405180910390fd5b5050565b610560610d21565b61044d5f610d7b565b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105dd91906112e9565b90505f836040516020016105f1919061146f565b60408051808303601f190181529082905280516020909101205f8054630213637b60e51b845260048401879052919350916001600160a01b039091169063426c6f60906024016040805180830381865afa158015610651573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106759190611481565b5190508284116106985760405163ab63c58360e01b815260040160405180910390fd5b8181146106b85760405163a7ee168560e01b815260040160405180910390fd5b5050505050565b5f8054604051631ae7330560e11b81526001600160a01b03909116906335ce660a906106ef90859060040161146f565b5f60405180830381865afa158015610709573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107309190810190611539565b90505f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a691906112e9565b90505f5b82518110156107e257818382815181106107c6576107c661156a565b602002602001015111156107da5750505050565b6001016107aa565b5060405163ab63c58360e01b815260040160405180910390fd5b5f805f9054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087091906112e9565b90505f82604051602001610884919061146f565b60408051601f1981840301815291905280516020909101205f8054919250906001600160a01b031663426c6f606108bc85600161157e565b6040518263ffffffff1660e01b81526004016108da91815260200190565b6040805180830381865afa1580156108f4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109189190611481565b51905081811461093b5760405163a7ee168560e01b815260040160405180910390fd5b50505050565b5f8054906101000a90046001600160a01b03166001600160a01b031663a2f8e4486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b391906112e9565b1561044d57604051631efbf1ab60e11b815260040160405180910390fd5b604051704b49544e44697362757273616c4461746160781b60208201525f9060310160408051808303601f19018152908290528051602090910120600254631ce5445760e11b8352600483018290529092505f916001600160a01b03909116906339ca88ae906024015f60405180830381865afa158015610a54573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610a7b91908101906115a3565b90505f81806020019051810190610a9291906115d4565b6003548151602083015160405163084c362760e21b81529394506001600160a01b0390921692632130d89c92610acb92916004016116c8565b5f604051808303815f87803b158015610ae2575f80fd5b505af1158015610af4573d5f803e3d5ffd5b505050505f60405180608001604052805f8152602001620f42408152602001306001600160a01b0316815260200184604051602401610b339190611751565b60408051601f198184030181529190526020810180516001600160e01b0316633e02be6160e21b1790529052905061093b816001610569565b610b74610d21565b6001600160a01b038116610bde5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610be781610d7b565b50565b5f610c2983838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610cf292505050565b90505f604051602001610c539070436c65616e4170705369676e617475726560781b815260110190565b60408051808303601f19018152908290528051602090910120600254631ce5445760e11b8352600483018290529092505f916001600160a01b03909116906339ca88ae906024015f60405180830381865afa158015610cb4573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610cdb91908101906115a3565b90505f610ce88483610dcc565b5050505050505050565b5f81604051602001610d049190611763565b604051602081830303815290604052805190602001209050919050565b6001546001600160a01b0316331461044d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bd5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f808251604103610e00576020830151604084015160608501515f1a610df487828585610e0e565b94509450505050610e07565b505f905060025b9250929050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e4357505f90506003610ec2565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e94573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610ebc575f60019250925050610ec2565b91505f90505b94509492505050565b5f60208284031215610edb575f80fd5b81358015158114610eea575f80fd5b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b805182526020810151602083015260018060a01b0360408201511660408301525f606082015160806060850152610f596080850182610ef1565b949350505050565b604081525f610f736040830185610f1f565b8281036020840152835160208252610f8e6020830182610ef1565b9695505050505050565b602080825282516040838301528051606084018190525f929190910190829060808501905b80831015610fe85783516001600160a01b031682526020938401936001939093019290910190610fbd565b50602086810151868303601f1901604088015280518084529082019450910191505f905b8082101561102f578351835260208301925060208401935060018201915061100c565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156110705761107061103a565b60405290565b604080519081016001600160401b03811182821017156110705761107061103a565b604051601f8201601f191681016001600160401b03811182821017156110c0576110c061103a565b604052919050565b6001600160a01b0381168114610be7575f80fd5b5f6001600160401b038211156110f4576110f461103a565b50601f01601f191660200190565b5f82601f830112611111575f80fd5b813561112461111f826110dc565b611098565b818152846020838601011115611138575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60808284031215611164575f80fd5b61116c61104e565b82358152602080840135908201529050604082013561118a816110c8565b604082015260608201356001600160401b038111156111a7575f80fd5b6111b384828501611102565b60608301525092915050565b5f80604083850312156111d0575f80fd5b82356001600160401b038111156111e5575f80fd5b6111f185828601611154565b95602094909401359450505050565b5f60208284031215611210575f80fd5b81356001600160401b03811115611225575f80fd5b610f5984828501611154565b5f60208284031215611241575f80fd5b8135610eea816110c8565b5f806020838503121561125d575f80fd5b82356001600160401b03811115611272575f80fd5b8301601f81018513611282575f80fd5b80356001600160401b03811115611297575f80fd5b8560208284010111156112a8575f80fd5b6020919091019590945092505050565b5f602082840312156112c8575f80fd5b81356001600160401b038111156112dd575f80fd5b610f5984828501611102565b5f602082840312156112f9575f80fd5b5051919050565b5f82601f83011261130f575f80fd5b815161131d61111f826110dc565b818152846020838601011115611331575f80fd5b8160208501602083015e5f918101602001919091529392505050565b5f6020828403121561135d575f80fd5b604051602081016001600160401b038111828210171561137f5761137f61103a565b806040525080915082516001600160401b0381111561139c575f80fd5b6113a885828601611300565b8252505092915050565b5f80604083850312156113c3575f80fd5b82516001600160401b038111156113d8575f80fd5b8301608081860312156113e9575f80fd5b6113f161104e565b8151815260208083015190820152604082015161140d816110c8565b604082015260608201516001600160401b0381111561142a575f80fd5b61143687828501611300565b606083015250809350505060208301516001600160401b03811115611459575f80fd5b6114658582860161134d565b9150509250929050565b602081525f610eea6020830184610f1f565b5f6040828403128015611492575f80fd5b5061149b611076565b825181526020928301519281019290925250919050565b5f6001600160401b038211156114ca576114ca61103a565b5060051b60200190565b5f82601f8301126114e3575f80fd5b81516114f161111f826114b2565b8082825260208201915060208360051b860101925085831115611512575f80fd5b602085015b8381101561152f578051835260209283019201611517565b5095945050505050565b5f60208284031215611549575f80fd5b81516001600160401b0381111561155e575f80fd5b610f59848285016114d4565b634e487b7160e01b5f52603260045260245ffd5b8082018082111561159d57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f602082840312156115b3575f80fd5b81516001600160401b038111156115c8575f80fd5b610f5984828501611300565b5f602082840312156115e4575f80fd5b81516001600160401b038111156115f9575f80fd5b82016040818503121561160a575f80fd5b611612611076565b81516001600160401b03811115611627575f80fd5b8201601f81018613611637575f80fd5b805161164561111f826114b2565b8082825260208201915060208360051b850101925088831115611666575f80fd5b6020840193505b82841015611691578351611680816110c8565b82526020938401939091019061166d565b845250505060208201516001600160401b038111156116ae575f80fd5b6116ba868285016114d4565b602083015250949350505050565b604080825283519082018190525f9060208501906060840190835b8181101561170a5783516001600160a01b03168352602093840193909201916001016116e3565b5050838103602080860191909152855180835291810192508501905f5b81811015611745578251845260209384019390920191600101611727565b50919695505050505050565b602081525f610eea6020830184610ef1565b7f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525f82518060208501601c85015e5f9201601c019182525091905056fea26469706673582212202bef3e08652848ba868b83d225947f1d2fe4410d45d8554e24df67abd139a95964736f6c634300081a0033",
    "sourceMap": "893:2589:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2601:111;;;;;;:::i;:::-;;:::i;:::-;;1923:233:54;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1470:208:57;;;:::i;:::-;;;;;;;:::i;3307:102:54:-;;;:::i;2731:305::-;;;:::i;1824:101:26:-;;;:::i;4675:481:54:-;;;;;;:::i;:::-;;:::i;1201:85:26:-;1273:6;;-1:-1:-1;;;;;1273:6:26;1201:85;;;-1:-1:-1;;;;;5923:32:62;;;5905:51;;5893:2;5878:18;1201:85:26;5759:203:62;3766:403:54;;;;;;:::i;:::-;;:::i;1050:26:57:-;;;;;-1:-1:-1;;;1050:26:57;;;;;;;;;6489:14:62;;6482:22;6464:41;;6452:2;6437:18;1050:26:57;6324:187:62;5468:381:54;;;;;;:::i;:::-;;:::i;2366:150::-;;;:::i;1947:648:57:-;;;:::i;1082:33::-;;;;;-1:-1:-1;;;;;1082:33:57;;;1121:43;;;;;-1:-1:-1;;;;;1121:43:57;;;2074:198:26;;;;;;:::i;:::-;;:::i;133:30:54:-;;;;;-1:-1:-1;;;;;133:30:54;;;2718:581:57;;;;;;:::i;:::-;;:::i;3305:175::-;;;;;;:::i;:::-;;:::i;:::-;;;8303:25:62;;;8291:2;8276:18;3305:175:57;8157:177:62;2601:111:57;1094:13:26;:11;:13::i;:::-;2673:14:57::1;:32:::0;;;::::1;;-1:-1:-1::0;;;2673:32:57::1;-1:-1:-1::0;;;;2673:32:57;;::::1;::::0;;;::::1;::::0;;2601:111::o;1923:233:54:-;1979:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:17:54;-1:-1:-1;;;;;;;;;;;;;2058:11:54;;:35;;-1:-1:-1;;;2058:35:54;;;;-1:-1:-1;;;;;;;;;2058:11:54;;;;:33;;:35;;;;;;;;;;;:11;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2110:11;;:39;;-1:-1:-1;;;2110:39:54;;;;;8303:25:62;;;2029:64:54;;-1:-1:-1;;;;;;2110:11:54;;:19;;8276:18:62;;2110:39:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2110:39:54;;;;;;;;;;;;:::i;:::-;2103:46;;;;;1923:233;;:::o;1470:208:57:-;-1:-1:-1;;;;;;;;;;;;;;;;1566:105:57;;1619:1;1566:105;;;1605:16;;;;;;;;;-1:-1:-1;;1566:105:57;;;;;1605:16;;;;;;;;;;-1:-1:-1;;;1566:105:57;;1644:16;;;1658:1;1644:16;;;;;;;;;1566:105;;;;;1644:16;;1658:1;1644:16;;;;1566:105;1644:16;;;-1:-1:-1;;;1566:105:57;;1559:112;;-1:-1:-1;1470:208:57:o;3307:102:54:-;3359:17;:15;:17::i;:::-;3386:16;:14;:16::i;:::-;3307:102::o;2731:305::-;2779:26;2808:11;;;;;;;;;-1:-1:-1;;;;;2808:11:54;-1:-1:-1;;;;;2808:33:54;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2853:33;2889:11;;:47;;-1:-1:-1;;;2889:47:54;;;;;8303:25:62;;;2779:64:54;;-1:-1:-1;2853:33:54;;-1:-1:-1;;;;;2889:11:54;;;;:27;;8276:18:62;;2889:47:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2853:83;-1:-1:-1;2950:30:54;;2946:84;;3003:16;;-1:-1:-1;;;3003:16:54;;;;;;;;;;;2946:84;2769:267;;2731:305::o;1824:101:26:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;4675:481:54:-:0;4769:26;4798:11;;;;;;;;;-1:-1:-1;;;;;4798:11:54;-1:-1:-1;;;;;4798:33:54;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4769:64;;4843:19;4886:7;4875:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;4875:19:54;;;;;;;4865:30;;4875:19;4865:30;;;;4905:18;4926:11;;-1:-1:-1;;;4926:34:54;;;;;8303:25:62;;;4865:30:54;;-1:-1:-1;4905:18:54;-1:-1:-1;;;;;4926:11:54;;;;:25;;8276:18:62;;4926:34:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;-1:-1:-1;4981:29:54;;;4977:87;;5033:20;;-1:-1:-1;;;5033:20:54;;;;;;;;;;;4977:87;5091:11;5077:10;:25;5073:77;;5125:14;;-1:-1:-1;;;5125:14:54;;;;;;;;;;;5073:77;4759:397;;;4675:481;;:::o;3766:403::-;3843:22;3868:11;;:33;;-1:-1:-1;;;3868:33:54;;-1:-1:-1;;;;;3868:11:54;;;;:24;;:33;;3893:7;;3868:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3868:33:54;;;;;;;;;;;;:::i;:::-;3843:58;;3911:26;3940:11;;;;;;;;;-1:-1:-1;;;;;3940:11:54;-1:-1:-1;;;;;3940:33:54;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3911:64;;3990:9;3985:141;4009:5;:12;4005:1;:16;3985:141;;;4057:18;4046:5;4052:1;4046:8;;;;;;;;:::i;:::-;;;;;;;:29;4042:74;;;4095:7;;;3766:403;:::o;4042:74::-;4023:3;;3985:141;;;;4142:20;;-1:-1:-1;;;4142:20:54;;;;;;;;;;;5468:381;5543:26;5572:11;;;;;;;;;-1:-1:-1;;;;;5572:11:54;-1:-1:-1;;;;;5572:33:54;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5543:64;;5617:19;5660:7;5649:19;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5649:19:54;;;;;;;;;5639:30;;5649:19;5639:30;;;;5679:18;5700:11;;5639:30;;-1:-1:-1;5679:18:54;-1:-1:-1;;;;;5700:11:54;:25;5726:22;:18;5700:11;5726:22;:::i;:::-;5700:49;;;;;;;;;;;;;8303:25:62;;8291:2;8276:18;;8157:177;5700:49:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;-1:-1:-1;5770:25:54;;;5766:77;;5818:14;;-1:-1:-1;;;5818:14:54;;;;;;;;;;;5766:77;5533:316;;;5468:381;:::o;2366:150::-;2419:11;;;;;;;;-1:-1:-1;;;;;2419:11:54;-1:-1:-1;;;;;2419:33:54;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;2415:95;;2482:17;;-1:-1:-1;;;2482:17:54;;;;;;;;;;;1947:648:57;2015:37;;-1:-1:-1;;;2015:37:57;;;13574:32:62;1991:11:57;;13622:12:62;;2015:37:57;;;;;;-1:-1:-1;;2015:37:57;;;;;;;2005:48;;2015:37;2005:48;;;;2103:18;;-1:-1:-1;;;2083:74:57;;;;;8303:25:62;;;2005:48:57;;-1:-1:-1;2063:17:57;;-1:-1:-1;;;;;2103:18:57;;;;2083:69;;8276:18:62;;2083:74:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2083:74:57;;;;;;;;;;;;:::i;:::-;2063:94;;2168:34;2216:4;2205:33;;;;;;;;;;;;:::i;:::-;2248:17;;2277:23;;2302:21;;;;2248:76;;-1:-1:-1;;;2248:76:57;;2168:70;;-1:-1:-1;;;;;;2248:17:57;;;;:28;;:76;;2277:23;2248:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2335:25;2363:184;;;;;;;;2396:1;2363:184;;;;2449:7;2363:184;;;;2425:4;-1:-1:-1;;;;;2363:184:57;;;;;2531:4;2481:55;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2481:55:57;;;;;;;;;;;;;;-1:-1:-1;;;;;2481:55:57;-1:-1:-1;;;2481:55:57;;;2363:184;;2335:212;-1:-1:-1;2558:30:57;2335:212;2586:1;2558:18;:30::i;2074:198:26:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:26;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:26;;17018:2:62;2154:73:26::1;::::0;::::1;17000:21:62::0;17057:2;17037:18;;;17030:30;17096:34;17076:18;;;17069:62;-1:-1:-1;;;17147:18:62;;;17140:36;17193:19;;2154:73:26::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;2718:581:57:-;2786:28;2817:29;2841:4;;2817:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2817:23:57;;-1:-1:-1;;;2817:29:57:i;:::-;2786:60;;2857:11;2881:37;;;;;;-1:-1:-1;;;17425:32:62;;17482:2;17473:12;;17223:268;2881:37:57;;;;;;;-1:-1:-1;;2881:37:57;;;;;;;2871:48;;2881:37;2871:48;;;;2974:18;;-1:-1:-1;;;2954:74:57;;;;;8303:25:62;;;2871:48:57;;-1:-1:-1;2929:22:57;;-1:-1:-1;;;;;2974:18:57;;;;2954:69;;8276:18:62;;2954:74:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2954:74:57;;;;;;;;;;;;:::i;:::-;2929:99;;3139:14;3158:49;3175:20;3197:9;3158:16;:49::i;:::-;-1:-1:-1;;;;;;;;2718:581:57:o;3305:175::-;3378:7;3467:4;3414:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3404:69;;;;;;3397:76;;3305:175;;;:::o;1359:130:26:-;1273:6;;-1:-1:-1;;;;;1273:6:26;719:10:31;1422:23:26;1414:68;;;;-1:-1:-1;;;1414:68:26;;18211:2:62;1414:68:26;;;18193:21:62;;;18230:18;;;18223:30;18289:34;18269:18;;;18262:62;18341:18;;1414:68:26;18009:356:62;2426:187:26;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2145:730:33:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2259:610;2145:730;;;;;:::o;5009:1456::-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;18597:25:62;;;18670:4;18658:17;;18638:18;;;18631:45;;;;18692:18;;;18685:34;;;18735:18;;;18728:34;;;6276:24:33;;18569:19:62;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;-1:-1:-1;;6276:24:33;;;-1:-1:-1;;;;;;;6314:20:33;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;14:273:62:-;70:6;123:2;111:9;102:7;98:23;94:32;91:52;;;139:1;136;129:12;91:52;178:9;165:23;231:5;224:13;217:21;210:5;207:32;197:60;;253:1;250;243:12;197:60;276:5;14:273;-1:-1:-1;;;14:273:62:o;292:288::-;333:3;371:5;365:12;398:6;393:3;386:19;454:6;447:4;440:5;436:16;429:4;424:3;420:14;414:47;506:1;499:4;490:6;485:3;481:16;477:27;470:38;569:4;562:2;558:7;553:2;545:6;541:15;537:29;532:3;528:39;524:50;517:57;;;292:288;;;;:::o;585:391::-;674:5;668:12;663:3;656:25;730:4;723:5;719:16;713:23;706:4;701:3;697:14;690:47;815:1;811;806:3;802:11;798:19;790:4;783:5;779:16;773:23;769:49;762:4;757:3;753:14;746:73;638:3;865:4;858:5;854:16;848:23;903:4;896;891:3;887:14;880:28;924:46;964:4;959:3;955:14;941:12;924:46;:::i;:::-;917:53;585:391;-1:-1:-1;;;;585:391:62:o;981:557::-;1258:2;1247:9;1240:21;1221:4;1284:56;1336:2;1325:9;1321:18;1313:6;1284:56;:::i;:::-;1388:9;1380:6;1376:22;1371:2;1360:9;1356:18;1349:50;1434:6;1428:13;1465:2;1457:6;1450:18;1485:47;1528:2;1520:6;1516:15;1502:12;1485:47;:::i;:::-;1477:55;981:557;-1:-1:-1;;;;;;981:557:62:o;1543:1272::-;1736:2;1718:21;;;1809:13;;1858:4;1838:18;;;1831:32;1912:19;;1777:2;1762:18;;1940:22;;;1699:4;;2020:21;;;;;1699:4;;1993:3;1978:19;;;2069:195;2083:6;2080:1;2077:13;2069:195;;;2148:13;;-1:-1:-1;;;;;2144:39:62;2132:52;;2213:2;2239:15;;;;2180:1;2098:9;;;;;2204:12;;;;2069:195;;;-1:-1:-1;2313:2:62;2301:15;;;2295:22;2359:19;;;-1:-1:-1;;2355:33:62;2348:4;2333:20;;2326:63;2439:21;;2469;;;2545:23;;;;-1:-1:-1;2508:12:62;;;-1:-1:-1;2588:1:62;;2598:189;2614:8;2609:3;2606:17;2598:189;;;2689:8;2683:15;2676:5;2669:30;2732:2;2725:5;2721:14;2712:23;;2774:2;2764:8;2760:17;2748:29;;2642:1;2637:3;2633:11;2626:18;;2598:189;;;-1:-1:-1;2804:5:62;;1543:1272;-1:-1:-1;;;;;1543:1272:62:o;2820:127::-;2881:10;2876:3;2872:20;2869:1;2862:31;2912:4;2909:1;2902:15;2936:4;2933:1;2926:15;2952:253;3024:2;3018:9;3066:4;3054:17;;-1:-1:-1;;;;;3086:34:62;;3122:22;;;3083:62;3080:88;;;3148:18;;:::i;:::-;3184:2;3177:22;2952:253;:::o;3210:251::-;3282:2;3276:9;;;3312:15;;-1:-1:-1;;;;;3342:34:62;;3378:22;;;3339:62;3336:88;;;3404:18;;:::i;3466:275::-;3537:2;3531:9;3602:2;3583:13;;-1:-1:-1;;3579:27:62;3567:40;;-1:-1:-1;;;;;3622:34:62;;3658:22;;;3619:62;3616:88;;;3684:18;;:::i;:::-;3720:2;3713:22;3466:275;;-1:-1:-1;3466:275:62:o;3746:131::-;-1:-1:-1;;;;;3821:31:62;;3811:42;;3801:70;;3867:1;3864;3857:12;3882:186;3930:4;-1:-1:-1;;;;;3955:6:62;3952:30;3949:56;;;3985:18;;:::i;:::-;-1:-1:-1;4051:2:62;4030:15;-1:-1:-1;;4026:29:62;4057:4;4022:40;;3882:186::o;4073:486::-;4115:5;4168:3;4161:4;4153:6;4149:17;4145:27;4135:55;;4186:1;4183;4176:12;4135:55;4226:6;4213:20;4257:52;4273:35;4301:6;4273:35;:::i;:::-;4257:52;:::i;:::-;4334:6;4325:7;4318:23;4388:3;4381:4;4372:6;4364;4360:19;4356:30;4353:39;4350:59;;;4405:1;4402;4395:12;4350:59;4470:6;4463:4;4455:6;4451:17;4444:4;4435:7;4431:18;4418:59;4526:1;4497:20;;;4519:4;4493:31;4486:42;;;;4501:7;4073:486;-1:-1:-1;;;4073:486:62:o;4564:719::-;4621:5;4669:4;4657:9;4652:3;4648:19;4644:30;4641:50;;;4687:1;4684;4677:12;4641:50;4709:22;;:::i;:::-;4776:23;;4808:22;;4903:2;4888:18;;;4875:32;4923:14;;;4916:31;4700;-1:-1:-1;4999:2:62;4984:18;;4971:32;5012:33;4971:32;5012:33;:::i;:::-;5072:2;5061:14;;5054:31;5136:2;5121:18;;5108:32;-1:-1:-1;;;;;5152:30:62;;5149:50;;;5195:1;5192;5185:12;5149:50;5231:45;5272:3;5263:6;5252:9;5248:22;5231:45;:::i;:::-;5226:2;5219:5;5215:14;5208:69;;4564:719;;;;:::o;5288:466::-;5385:6;5393;5446:2;5434:9;5425:7;5421:23;5417:32;5414:52;;;5462:1;5459;5452:12;5414:52;5502:9;5489:23;-1:-1:-1;;;;;5527:6:62;5524:30;5521:50;;;5567:1;5564;5557:12;5521:50;5590:61;5643:7;5634:6;5623:9;5619:22;5590:61;:::i;:::-;5580:71;5720:2;5705:18;;;;5692:32;;-1:-1:-1;;;;5288:466:62:o;5967:352::-;6055:6;6108:2;6096:9;6087:7;6083:23;6079:32;6076:52;;;6124:1;6121;6114:12;6076:52;6164:9;6151:23;-1:-1:-1;;;;;6189:6:62;6186:30;6183:50;;;6229:1;6226;6219:12;6183:50;6252:61;6305:7;6296:6;6285:9;6281:22;6252:61;:::i;6752:247::-;6811:6;6864:2;6852:9;6843:7;6839:23;6835:32;6832:52;;;6880:1;6877;6870:12;6832:52;6919:9;6906:23;6938:31;6963:5;6938:31;:::i;7241:586::-;7311:6;7319;7372:2;7360:9;7351:7;7347:23;7343:32;7340:52;;;7388:1;7385;7378:12;7340:52;7428:9;7415:23;-1:-1:-1;;;;;7453:6:62;7450:30;7447:50;;;7493:1;7490;7483:12;7447:50;7516:22;;7569:4;7561:13;;7557:27;-1:-1:-1;7547:55:62;;7598:1;7595;7588:12;7547:55;7638:2;7625:16;-1:-1:-1;;;;;7656:6:62;7653:30;7650:50;;;7696:1;7693;7686:12;7650:50;7741:7;7736:2;7727:6;7723:2;7719:15;7715:24;7712:37;7709:57;;;7762:1;7759;7752:12;7709:57;7793:2;7785:11;;;;;7815:6;;-1:-1:-1;7241:586:62;-1:-1:-1;;;7241:586:62:o;7832:320::-;7900:6;7953:2;7941:9;7932:7;7928:23;7924:32;7921:52;;;7969:1;7966;7959:12;7921:52;8009:9;7996:23;-1:-1:-1;;;;;8034:6:62;8031:30;8028:50;;;8074:1;8071;8064:12;8028:50;8097:49;8138:7;8129:6;8118:9;8114:22;8097:49;:::i;8339:230::-;8409:6;8462:2;8450:9;8441:7;8437:23;8433:32;8430:52;;;8478:1;8475;8468:12;8430:52;-1:-1:-1;8523:16:62;;8339:230;-1:-1:-1;8339:230:62:o;8756:483::-;8809:5;8862:3;8855:4;8847:6;8843:17;8839:27;8829:55;;8880:1;8877;8870:12;8829:55;8913:6;8907:13;8944:52;8960:35;8988:6;8960:35;:::i;8944:52::-;9021:6;9012:7;9005:23;9075:3;9068:4;9059:6;9051;9047:19;9043:30;9040:39;9037:59;;;9092:1;9089;9082:12;9037:59;9150:6;9143:4;9135:6;9131:17;9124:4;9115:7;9111:18;9105:52;9206:1;9177:20;;;9199:4;9173:31;9166:42;;;;9181:7;8756:483;-1:-1:-1;;;8756:483:62:o;9244:573::-;9314:5;9362:4;9350:9;9345:3;9341:19;9337:30;9334:50;;;9380:1;9377;9370:12;9334:50;9433:2;9427:9;9475:4;9463:17;;-1:-1:-1;;;;;9495:34:62;;9531:22;;;9492:62;9489:88;;;9557:18;;:::i;:::-;9597:10;9593:2;9586:22;;9626:6;9617:15;;9661:9;9655:16;-1:-1:-1;;;;;9686:6:62;9683:30;9680:50;;;9726:1;9723;9716:12;9680:50;9754:56;9806:3;9797:6;9786:9;9782:22;9754:56;:::i;:::-;9746:6;9739:72;;;9244:573;;;;:::o;9822:1199::-;9961:6;9969;10022:2;10010:9;10001:7;9997:23;9993:32;9990:52;;;10038:1;10035;10028:12;9990:52;10071:9;10065:16;-1:-1:-1;;;;;10096:6:62;10093:30;10090:50;;;10136:1;10133;10126:12;10090:50;10159:22;;10215:4;10197:16;;;10193:27;10190:47;;;10233:1;10230;10223:12;10190:47;10259:22;;:::i;:::-;10326:9;;10344:22;;10425:2;10417:11;;;10411:18;10445:14;;;10438:31;10507:2;10499:11;;10493:18;10520:33;10493:18;10520:33;:::i;:::-;10580:2;10569:14;;10562:31;10632:2;10624:11;;10618:18;-1:-1:-1;;;;;10648:32:62;;10645:52;;;10693:1;10690;10683:12;10645:52;10729:55;10776:7;10765:8;10761:2;10757:17;10729:55;:::i;:::-;10724:2;10717:5;10713:14;10706:79;;10804:5;10794:15;;;;10855:2;10844:9;10840:18;10834:25;-1:-1:-1;;;;;10874:8:62;10871:32;10868:52;;;10916:1;10913;10906:12;10868:52;10939:76;11007:7;10996:8;10985:9;10981:24;10939:76;:::i;:::-;10929:86;;;9822:1199;;;;;:::o;11026:269::-;11213:2;11202:9;11195:21;11176:4;11233:56;11285:2;11274:9;11270:18;11262:6;11233:56;:::i;11300:427::-;11393:6;11453:2;11441:9;11432:7;11428:23;11424:32;11468:2;11465:22;;;11483:1;11480;11473:12;11465:22;-1:-1:-1;11525:22:62;;:::i;:::-;11570:16;;11556:31;;11653:2;11638:18;;;11632:25;11673:14;;;11666:31;;;;-1:-1:-1;11563:5:62;11300:427;-1:-1:-1;11300:427:62:o;11732:183::-;11792:4;-1:-1:-1;;;;;11817:6:62;11814:30;11811:56;;;11847:18;;:::i;:::-;-1:-1:-1;11892:1:62;11888:14;11904:4;11884:25;;11732:183::o;11920:720::-;11985:5;12038:3;12031:4;12023:6;12019:17;12015:27;12005:55;;12056:1;12053;12046:12;12005:55;12089:6;12083:13;12116:64;12132:47;12172:6;12132:47;:::i;12116:64::-;12204:3;12228:6;12223:3;12216:19;12260:4;12255:3;12251:14;12244:21;;12321:4;12311:6;12308:1;12304:14;12296:6;12292:27;12288:38;12274:52;;12349:3;12341:6;12338:15;12335:35;;;12366:1;12363;12356:12;12335:35;12402:4;12394:6;12390:17;12416:193;12432:6;12427:3;12424:15;12416:193;;;12524:10;;12547:18;;12594:4;12585:14;;;;12449;12416:193;;;-1:-1:-1;12627:7:62;11920:720;-1:-1:-1;;;;;11920:720:62:o;12645:363::-;12740:6;12793:2;12781:9;12772:7;12768:23;12764:32;12761:52;;;12809:1;12806;12799:12;12761:52;12842:9;12836:16;-1:-1:-1;;;;;12867:6:62;12864:30;12861:50;;;12907:1;12904;12897:12;12861:50;12930:72;12994:7;12985:6;12974:9;12970:22;12930:72;:::i;13013:127::-;13074:10;13069:3;13065:20;13062:1;13055:31;13105:4;13102:1;13095:15;13129:4;13126:1;13119:15;13145:222;13210:9;;;13231:10;;;13228:133;;;13283:10;13278:3;13274:20;13271:1;13264:31;13318:4;13315:1;13308:15;13346:4;13343:1;13336:15;13228:133;13145:222;;;;:::o;13645:335::-;13724:6;13777:2;13765:9;13756:7;13752:23;13748:32;13745:52;;;13793:1;13790;13783:12;13745:52;13826:9;13820:16;-1:-1:-1;;;;;13851:6:62;13848:30;13845:50;;;13891:1;13888;13881:12;13845:50;13914:60;13966:7;13957:6;13946:9;13942:22;13914:60;:::i;13985:1428::-;14087:6;14140:2;14128:9;14119:7;14115:23;14111:32;14108:52;;;14156:1;14153;14146:12;14108:52;14189:9;14183:16;-1:-1:-1;;;;;14214:6:62;14211:30;14208:50;;;14254:1;14251;14244:12;14208:50;14277:22;;14333:4;14315:16;;;14311:27;14308:47;;;14351:1;14348;14341:12;14308:47;14377:22;;:::i;:::-;14430:2;14424:9;-1:-1:-1;;;;;14448:8:62;14445:32;14442:52;;;14490:1;14487;14480:12;14442:52;14513:17;;14561:4;14553:13;;14549:27;-1:-1:-1;14539:55:62;;14590:1;14587;14580:12;14539:55;14623:2;14617:9;14646:64;14662:47;14702:6;14662:47;:::i;14646:64::-;14732:3;14756:6;14751:3;14744:19;14788:2;14783:3;14779:12;14772:19;;14843:2;14833:6;14830:1;14826:14;14822:2;14818:23;14814:32;14800:46;;14869:7;14861:6;14858:19;14855:39;;;14890:1;14887;14880:12;14855:39;14922:2;14918;14914:11;14903:22;;14934:216;14950:6;14945:3;14942:15;14934:216;;;15025:3;15019:10;15042:33;15067:7;15042:33;:::i;:::-;15088:20;;15137:2;14967:12;;;;15128;;;;14934:216;;;15159:20;;-1:-1:-1;;;15218:2:62;15210:11;;15204:18;-1:-1:-1;;;;;15234:32:62;;15231:52;;;15279:1;15276;15269:12;15231:52;15315:67;15374:7;15363:8;15359:2;15355:17;15315:67;:::i;:::-;15310:2;15299:14;;15292:91;-1:-1:-1;15303:5:62;13985:1428;-1:-1:-1;;;;13985:1428:62:o;15418:1171::-;15686:2;15698:21;;;15768:13;;15671:18;;;15790:22;;;15638:4;;15881;15869:17;;;15843:2;15828:18;;;15638:4;15914:199;15928:6;15925:1;15922:13;15914:199;;;15993:13;;-1:-1:-1;;;;;15989:39:62;15977:52;;16058:4;16086:17;;;;16049:14;;;;16025:1;15943:9;15914:199;;;-1:-1:-1;;16151:19:62;;;16144:4;16129:20;;;16122:49;;;;16221:13;;16243:21;;;16282:14;;;;-1:-1:-1;16321:17:62;;;16358:1;16368:193;16384:8;16379:3;16376:17;16368:193;;;16453:15;;16439:30;;16502:4;16491:16;;;;16532:19;;;;16412:1;16403:11;16368:193;;;-1:-1:-1;16578:5:62;;15418:1171;-1:-1:-1;;;;;;15418:1171:62:o;16594:217::-;16741:2;16730:9;16723:21;16704:4;16761:44;16801:2;16790:9;16786:18;16778:6;16761:44;:::i;17496:508::-;17756:66;17751:3;17744:79;17726:3;17852:6;17846:13;17907:6;17900:4;17892:6;17888:17;17883:2;17878:3;17874:12;17868:46;17978:1;17937:16;;17955:2;17933:25;17967:13;;;-1:-1:-1;17933:25:62;17496:508;-1:-1:-1;17496:508:62:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "assertFutureCallTo((uint256,uint256,address,bytes))": "921a62e2",
    "assertFutureCallTo((uint256,uint256,address,bytes),uint256)": "801e0f42",
    "assertNextCallTo((uint256,uint256,address,bytes))": "b2102523",
    "backrunBlocker()": "5dccf4c4",
    "callbreaker()": "f320d0a9",
    "callbreakerAddress()": "cd005347",
    "disbursalContract()": "ceb527bc",
    "disburseKITNs()": "c6a02b7d",
    "frontrunBlocker()": "b5ba4362",
    "getCurrentExecutingPair()": "1db72bc9",
    "getEthSignedMessageHash(bytes)": "f9aea466",
    "getSampleDisbursalData()": "21a88409",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setContinue(bool)": "06da6b6d",
    "shouldContinue()": "aeec0501",
    "soloExecuteBlocker()": "5075e4b2",
    "transferOwnership(address)": "f2fde38b",
    "verifySignature(bytes)": "f80af984"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_callbreaker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_disbursalContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FutureCallExpected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IllegalBackrun\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IllegalFrontrun\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PortalClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unaudited\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callvalue\",\"type\":\"bytes\"}],\"internalType\":\"struct CallObject\",\"name\":\"callObj\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"hintdex\",\"type\":\"uint256\"}],\"name\":\"assertFutureCallTo\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callvalue\",\"type\":\"bytes\"}],\"internalType\":\"struct CallObject\",\"name\":\"callObj\",\"type\":\"tuple\"}],\"name\":\"assertFutureCallTo\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callvalue\",\"type\":\"bytes\"}],\"internalType\":\"struct CallObject\",\"name\":\"callObj\",\"type\":\"tuple\"}],\"name\":\"assertNextCallTo\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backrunBlocker\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbreaker\",\"outputs\":[{\"internalType\":\"contract CallBreaker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbreakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disbursalContract\",\"outputs\":[{\"internalType\":\"contract IDisbursalContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disburseKITNs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frontrunBlocker\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentExecutingPair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callvalue\",\"type\":\"bytes\"}],\"internalType\":\"struct CallObject\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"returnvalue\",\"type\":\"bytes\"}],\"internalType\":\"struct ReturnObject\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSampleDisbursalData\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct KITNDisburmentScheduler.DisbursalData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldContinue\",\"type\":\"bool\"}],\"name\":\"setContinue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldContinue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soloExecuteBlocker\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"verifySignature\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallMismatch()\":[{\"details\":\"Selector 0xa7ee1685\"}],\"FutureCallExpected()\":[{\"details\":\"Selector 0xab63c583\"}],\"IllegalBackrun()\":[{\"details\":\"Selector 0xd1cb360d\"}],\"IllegalFrontrun()\":[{\"details\":\"Selector 0x3df7e356\"}],\"NotApproved()\":[{\"details\":\"Selector 0xc19f17a9\"}],\"PortalClosed()\":[{\"details\":\"Selector 0x59f0d709\"}],\"Unaudited()\":[{\"details\":\"Selector 0xed32fe28\"}]},\"kind\":\"dev\",\"methods\":{\"assertFutureCallTo((uint256,uint256,address,bytes))\":{\"details\":\"This iterates over all call indices and ensures there's one after the current call.      Adding a hintdex makes this cheaper.\",\"params\":{\"callObj\":\"The callobject to check for. This callObject should strictly be a future call\"}},\"assertFutureCallTo((uint256,uint256,address,bytes),uint256)\":{\"custom:reverts\":\"FutureCallExpected() Hintdexes should always be in the future of the current executing callCallMismatch() The callobject at the hintdex should match the specified callObject\",\"params\":{\"callObj\":\"The callobject to check for. This callObject should strictly be a future call\",\"hintdex\":\"The hint index to start checking for future calls\"}},\"assertNextCallTo((uint256,uint256,address,bytes))\":{\"custom:reverts\":\"CallMismatch() The callobject at the next index should match the specified callObject\",\"details\":\"makes sure the next call is to this callobj\",\"params\":{\"callObj\":\"The callobject to check for the next call\"}},\"backrunBlocker()\":{\"custom:reverts\":\"IllegalBackrun() when the currently executing call has a backrunning call\"},\"frontrunBlocker()\":{\"custom:reverts\":\"IllegalFrontrun() when the currently executing call has a frontrunning call\"},\"getCurrentExecutingPair()\":{\"details\":\"This function allows for time travel by returning the returnobj of the currently executing call\",\"returns\":{\"_0\":\"A pair consisting of the CallObject and ReturnObject of the currently executing call\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"soloExecuteBlocker()\":{\"details\":\"This function calls both frontrunBlocker() and backrunBlocker() to ensure no frontrunning or backrunning can occurIt is recommended to tip to increase the likelihood of execution\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AddressZero()\":[{\"notice\":\"The address passed was a zero address\"}],\"PortalClosed()\":[{\"notice\":\"Error thrown when calling a function that can only be called when the portal is open\"}]},\"kind\":\"user\",\"methods\":{\"assertFutureCallTo((uint256,uint256,address,bytes))\":{\"notice\":\"Ensures that there is a future call to the specified callobject after the current call\"},\"assertFutureCallTo((uint256,uint256,address,bytes),uint256)\":{\"notice\":\"Ensures that there is a future call to the specified callobject after the current call\"},\"assertNextCallTo((uint256,uint256,address,bytes))\":{\"notice\":\"Ensures that the next call is to the specified callobject\"},\"backrunBlocker()\":{\"notice\":\"Prevents backrunning by ensuring the currently executing call is the first in the reverse list\"},\"disburseKITNs()\":{\"notice\":\"fetch params for spendcoins at MEVTime, get the correct arg from the data store and  execute spendcoins on the disbursal contract. After disbursal schedule a next call to itself  in the LaminatedProxy of the CleanApp.\"},\"frontrunBlocker()\":{\"notice\":\"Prevents frontrunning by ensuring the currently executing call is the first in the list\"},\"getCurrentExecutingPair()\":{\"notice\":\"Returns the call index, callobj, and returnobj of the currently executing call\"},\"soloExecuteBlocker()\":{\"notice\":\"Prevents both frontrunning and backrunning\"}},\"notice\":\"This is an POC example of a schedular which also fetches data at execution time from the SOLVER  It schedules token dirbursal of KITN tokens and after evert disbursal schedule the next call for the same  acting like an on chain cron job for distributing tokens to its users. Now, since the list of recievers keeps  changing, the list of users and amounts are provided by the solver at execution time based on reports generated  in the CleanApp backend\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/examples/MEVOracle/KITNDisburmentScheduler.sol\":\"KITNDisburmentScheduler\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/CallBreakerTypes.sol\":{\"keccak256\":\"0x85022b1c9993d6266a4ea7e83ea3b94538f9b724716c6b53548ece9c7889cbe4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fcab0e057fa1ecd02e80b52c8e1fcc0cdc9802a9b27ce8c2eb442766697f89b4\",\"dweb:/ipfs/QmepmzsP76kQQr7dCS8Y7efEumoMayoBeYhR1czU72skxk\"]},\"src/TimeTypes.sol\":{\"keccak256\":\"0xc053cd8b1d9a1736dfe384d597e1a9b6dfbe571b79116dac4604db0d1f2ec4d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://28b8a430572769b1139c8e7abe3a970638aad91298dd14e1e4a7fa541525be6e\",\"dweb:/ipfs/QmRpv5JsZdg5erZ2KwoFiUVXPY6wurxaMqXR4pR1KqykUe\"]},\"src/interfaces/ICallBreaker.sol\":{\"keccak256\":\"0x933f3c4b18f121078e7d6a24d964ea6fa0e0cc0b3dc38391a5faad121fb50290\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b80ecc3f481acb4f4a0046cc514551c6b04ef6c295162d571d03c29b8124d7d5\",\"dweb:/ipfs/QmRe519xULaxQSzSsqDfMB3yAn9FwRhXf7qNtmkUXPmqHE\"]},\"src/interfaces/IFlashLoan.sol\":{\"keccak256\":\"0xa2c352be61f5395a00247a1ec2ad8d77af9d6fd3a2ab936da7c8bbeb21c857eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://880c4a7a36c4ed49418f512c0182803186ca03ba81f86fe9217ff51f81153b76\",\"dweb:/ipfs/QmXKuevWuRqFEvA3ScQ8Gc898V3KSrXBUS9NWr8YdXhEg9\"]},\"src/libraries/Basics.sol\":{\"keccak256\":\"0x067031ffde9fec8adefd836b14f3a9a2f2414f0291f9e680445423645ea81095\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1e3be84ada8ffc56af0b693bbd0e0ab17d87ee8badcd91d8b5f76887c3d9f8c5\",\"dweb:/ipfs/QmTSMAGYkK26uWkAZm7UQWQzRaBVtxXkKBmhdqq7Fs5D1Y\"]},\"src/libraries/CompactBytes.sol\":{\"keccak256\":\"0x2e73cebf079afe436380b491b084f18600c80d9e0f4b917b37881862eea64a72\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b4e9aff6f83a78098c798b6f7fd1d03cea35830e449554459becdbac199e506\",\"dweb:/ipfs/QmbDWm6gUNRpwCAFjy3nMDyVrGqN1sARPLfENfW3D6MUMf\"]},\"src/libraries/CompactDynArray.sol\":{\"keccak256\":\"0xe2f0dd91740880ac29c81b2598e9f3eac2d8a3efa1a71d4c4a7bffc07cf802ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eeeb16146f1d3ae936ee5010ec22563f199f4599ecf955e55d24d14a1ab73ac0\",\"dweb:/ipfs/Qmd1YyT2fSsEgWCisBj9qs6ERQ9tBrvwVh9v8G5ibcFH3n\"]},\"src/timetravel/CallBreaker.sol\":{\"keccak256\":\"0x8f147bf609070b81e6e14ce5f266cfdb96cb1d59e1bd44c0c993c5671d776f6d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d29db8ac703cbdd273e734d0fc2dde73f606b9277782ffaf030e5d3f8e817024\",\"dweb:/ipfs/QmZwpM3pdzivbaCxUfpkfsF8agKnsAx3yyR2N6trUXJEQH\"]},\"src/timetravel/CallBreakerStorage.sol\":{\"keccak256\":\"0x208dbab71275950986f33bd49881bd208a0f64c70055eb733acd55cdf8c07ac0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://90d70704f8e6ee36894e3b5eaf4297eb5b3f701915c7437edcd3f153664c985f\",\"dweb:/ipfs/QmVDTDD3gkhRdP2xpJ1DrN8Mp9WdjSx9yivxFvfPG6Fbm4\"]},\"src/timetravel/SmarterContract.sol\":{\"keccak256\":\"0x0450e8de7685f520cfc67882d76c763d8fe7bc47fde94fef5ea294f2d4825ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://60ba015e5380543be19905e0de14c4a8616b3b5e23d5e526bfd480b9f986cfd5\",\"dweb:/ipfs/QmYbL7gZNyGE9V9RVcFJUMB6ruBcx7zifbXKeDYrRBcoCa\"]},\"test/examples/MEVOracle/KITNDisburmentScheduler.sol\":{\"keccak256\":\"0xc1516e5a64aebc9377a0e07e8b908e9be67b833f976c8b4b9d4a8ab4c083679e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fdb225605cd38b302a00889e5a99b1fe0de3e6a546b148da5a052614c9d740ce\",\"dweb:/ipfs/QmPEk4i1VjfRzvzjzYWwxtjBikbaVjnycEdFKo3Ke28EK9\"]},\"test/utils/interfaces/IMintableERC20.sol\":{\"keccak256\":\"0xbc7253c2dbbdb1d2154aa44533cb928fda78d107c7c0373e6688e97666cc71f1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a1c00b324286753e467b1897d6a9f43b6864c991a1c952062be63b3b939388d\",\"dweb:/ipfs/QmQSVGm3dy3rBYrk1RTBTeMSz4EAGKdEGSYmGyraPMyoxt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_callbreaker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_disbursalContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FutureCallExpected"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IllegalBackrun"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IllegalFrontrun"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PortalClosed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unaudited"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct CallObject",
              "name": "callObj",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callvalue",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "hintdex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertFutureCallTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct CallObject",
              "name": "callObj",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callvalue",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertFutureCallTo"
        },
        {
          "inputs": [
            {
              "internalType": "struct CallObject",
              "name": "callObj",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callvalue",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertNextCallTo"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "backrunBlocker"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "callbreaker",
          "outputs": [
            {
              "internalType": "contract CallBreaker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "callbreakerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disbursalContract",
          "outputs": [
            {
              "internalType": "contract IDisbursalContract",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disburseKITNs"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frontrunBlocker"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentExecutingPair",
          "outputs": [
            {
              "internalType": "struct CallObject",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callvalue",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ReturnObject",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "returnvalue",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEthSignedMessageHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSampleDisbursalData",
          "outputs": [
            {
              "internalType": "struct KITNDisburmentScheduler.DisbursalData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "receivers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_shouldContinue",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContinue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldContinue",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "soloExecuteBlocker"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifySignature"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertFutureCallTo((uint256,uint256,address,bytes))": {
            "details": "This iterates over all call indices and ensures there's one after the current call.      Adding a hintdex makes this cheaper.",
            "params": {
              "callObj": "The callobject to check for. This callObject should strictly be a future call"
            }
          },
          "assertFutureCallTo((uint256,uint256,address,bytes),uint256)": {
            "custom:reverts": "FutureCallExpected() Hintdexes should always be in the future of the current executing callCallMismatch() The callobject at the hintdex should match the specified callObject",
            "params": {
              "callObj": "The callobject to check for. This callObject should strictly be a future call",
              "hintdex": "The hint index to start checking for future calls"
            }
          },
          "assertNextCallTo((uint256,uint256,address,bytes))": {
            "custom:reverts": "CallMismatch() The callobject at the next index should match the specified callObject",
            "details": "makes sure the next call is to this callobj",
            "params": {
              "callObj": "The callobject to check for the next call"
            }
          },
          "backrunBlocker()": {
            "custom:reverts": "IllegalBackrun() when the currently executing call has a backrunning call"
          },
          "frontrunBlocker()": {
            "custom:reverts": "IllegalFrontrun() when the currently executing call has a frontrunning call"
          },
          "getCurrentExecutingPair()": {
            "details": "This function allows for time travel by returning the returnobj of the currently executing call",
            "returns": {
              "_0": "A pair consisting of the CallObject and ReturnObject of the currently executing call"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "soloExecuteBlocker()": {
            "details": "This function calls both frontrunBlocker() and backrunBlocker() to ensure no frontrunning or backrunning can occurIt is recommended to tip to increase the likelihood of execution"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertFutureCallTo((uint256,uint256,address,bytes))": {
            "notice": "Ensures that there is a future call to the specified callobject after the current call"
          },
          "assertFutureCallTo((uint256,uint256,address,bytes),uint256)": {
            "notice": "Ensures that there is a future call to the specified callobject after the current call"
          },
          "assertNextCallTo((uint256,uint256,address,bytes))": {
            "notice": "Ensures that the next call is to the specified callobject"
          },
          "backrunBlocker()": {
            "notice": "Prevents backrunning by ensuring the currently executing call is the first in the reverse list"
          },
          "disburseKITNs()": {
            "notice": "fetch params for spendcoins at MEVTime, get the correct arg from the data store and  execute spendcoins on the disbursal contract. After disbursal schedule a next call to itself  in the LaminatedProxy of the CleanApp."
          },
          "frontrunBlocker()": {
            "notice": "Prevents frontrunning by ensuring the currently executing call is the first in the list"
          },
          "getCurrentExecutingPair()": {
            "notice": "Returns the call index, callobj, and returnobj of the currently executing call"
          },
          "soloExecuteBlocker()": {
            "notice": "Prevents both frontrunning and backrunning"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/",
        "v3-core/=lib/v3-core/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/examples/MEVOracle/KITNDisburmentScheduler.sol": "KITNDisburmentScheduler"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/CallBreakerTypes.sol": {
        "keccak256": "0x85022b1c9993d6266a4ea7e83ea3b94538f9b724716c6b53548ece9c7889cbe4",
        "urls": [
          "bzz-raw://fcab0e057fa1ecd02e80b52c8e1fcc0cdc9802a9b27ce8c2eb442766697f89b4",
          "dweb:/ipfs/QmepmzsP76kQQr7dCS8Y7efEumoMayoBeYhR1czU72skxk"
        ],
        "license": "GPL-3.0"
      },
      "src/TimeTypes.sol": {
        "keccak256": "0xc053cd8b1d9a1736dfe384d597e1a9b6dfbe571b79116dac4604db0d1f2ec4d3",
        "urls": [
          "bzz-raw://28b8a430572769b1139c8e7abe3a970638aad91298dd14e1e4a7fa541525be6e",
          "dweb:/ipfs/QmRpv5JsZdg5erZ2KwoFiUVXPY6wurxaMqXR4pR1KqykUe"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ICallBreaker.sol": {
        "keccak256": "0x933f3c4b18f121078e7d6a24d964ea6fa0e0cc0b3dc38391a5faad121fb50290",
        "urls": [
          "bzz-raw://b80ecc3f481acb4f4a0046cc514551c6b04ef6c295162d571d03c29b8124d7d5",
          "dweb:/ipfs/QmRe519xULaxQSzSsqDfMB3yAn9FwRhXf7qNtmkUXPmqHE"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IFlashLoan.sol": {
        "keccak256": "0xa2c352be61f5395a00247a1ec2ad8d77af9d6fd3a2ab936da7c8bbeb21c857eb",
        "urls": [
          "bzz-raw://880c4a7a36c4ed49418f512c0182803186ca03ba81f86fe9217ff51f81153b76",
          "dweb:/ipfs/QmXKuevWuRqFEvA3ScQ8Gc898V3KSrXBUS9NWr8YdXhEg9"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/Basics.sol": {
        "keccak256": "0x067031ffde9fec8adefd836b14f3a9a2f2414f0291f9e680445423645ea81095",
        "urls": [
          "bzz-raw://1e3be84ada8ffc56af0b693bbd0e0ab17d87ee8badcd91d8b5f76887c3d9f8c5",
          "dweb:/ipfs/QmTSMAGYkK26uWkAZm7UQWQzRaBVtxXkKBmhdqq7Fs5D1Y"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/CompactBytes.sol": {
        "keccak256": "0x2e73cebf079afe436380b491b084f18600c80d9e0f4b917b37881862eea64a72",
        "urls": [
          "bzz-raw://0b4e9aff6f83a78098c798b6f7fd1d03cea35830e449554459becdbac199e506",
          "dweb:/ipfs/QmbDWm6gUNRpwCAFjy3nMDyVrGqN1sARPLfENfW3D6MUMf"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/CompactDynArray.sol": {
        "keccak256": "0xe2f0dd91740880ac29c81b2598e9f3eac2d8a3efa1a71d4c4a7bffc07cf802ea",
        "urls": [
          "bzz-raw://eeeb16146f1d3ae936ee5010ec22563f199f4599ecf955e55d24d14a1ab73ac0",
          "dweb:/ipfs/Qmd1YyT2fSsEgWCisBj9qs6ERQ9tBrvwVh9v8G5ibcFH3n"
        ],
        "license": "GPL-3.0"
      },
      "src/timetravel/CallBreaker.sol": {
        "keccak256": "0x8f147bf609070b81e6e14ce5f266cfdb96cb1d59e1bd44c0c993c5671d776f6d",
        "urls": [
          "bzz-raw://d29db8ac703cbdd273e734d0fc2dde73f606b9277782ffaf030e5d3f8e817024",
          "dweb:/ipfs/QmZwpM3pdzivbaCxUfpkfsF8agKnsAx3yyR2N6trUXJEQH"
        ],
        "license": "GPL-3.0"
      },
      "src/timetravel/CallBreakerStorage.sol": {
        "keccak256": "0x208dbab71275950986f33bd49881bd208a0f64c70055eb733acd55cdf8c07ac0",
        "urls": [
          "bzz-raw://90d70704f8e6ee36894e3b5eaf4297eb5b3f701915c7437edcd3f153664c985f",
          "dweb:/ipfs/QmVDTDD3gkhRdP2xpJ1DrN8Mp9WdjSx9yivxFvfPG6Fbm4"
        ],
        "license": "GPL-3.0"
      },
      "src/timetravel/SmarterContract.sol": {
        "keccak256": "0x0450e8de7685f520cfc67882d76c763d8fe7bc47fde94fef5ea294f2d4825ef9",
        "urls": [
          "bzz-raw://60ba015e5380543be19905e0de14c4a8616b3b5e23d5e526bfd480b9f986cfd5",
          "dweb:/ipfs/QmYbL7gZNyGE9V9RVcFJUMB6ruBcx7zifbXKeDYrRBcoCa"
        ],
        "license": "GPL-3.0"
      },
      "test/examples/MEVOracle/KITNDisburmentScheduler.sol": {
        "keccak256": "0xc1516e5a64aebc9377a0e07e8b908e9be67b833f976c8b4b9d4a8ab4c083679e",
        "urls": [
          "bzz-raw://fdb225605cd38b302a00889e5a99b1fe0de3e6a546b148da5a052614c9d740ce",
          "dweb:/ipfs/QmPEk4i1VjfRzvzjzYWwxtjBikbaVjnycEdFKo3Ke28EK9"
        ],
        "license": "GPL-3.0"
      },
      "test/utils/interfaces/IMintableERC20.sol": {
        "keccak256": "0xbc7253c2dbbdb1d2154aa44533cb928fda78d107c7c0373e6688e97666cc71f1",
        "urls": [
          "bzz-raw://8a1c00b324286753e467b1897d6a9f43b6864c991a1c952062be63b3b939388d",
          "dweb:/ipfs/QmQSVGm3dy3rBYrk1RTBTeMSz4EAGKdEGSYmGyraPMyoxt"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 55551,
        "contract": "test/examples/MEVOracle/KITNDisburmentScheduler.sol:KITNDisburmentScheduler",
        "label": "callbreaker",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(CallBreaker)55233"
      },
      {
        "astId": 47196,
        "contract": "test/examples/MEVOracle/KITNDisburmentScheduler.sol:KITNDisburmentScheduler",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 56268,
        "contract": "test/examples/MEVOracle/KITNDisburmentScheduler.sol:KITNDisburmentScheduler",
        "label": "shouldContinue",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 56270,
        "contract": "test/examples/MEVOracle/KITNDisburmentScheduler.sol:KITNDisburmentScheduler",
        "label": "callbreakerAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 56273,
        "contract": "test/examples/MEVOracle/KITNDisburmentScheduler.sol:KITNDisburmentScheduler",
        "label": "disbursalContract",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IDisbursalContract)56254"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(CallBreaker)55233": {
        "encoding": "inplace",
        "label": "contract CallBreaker",
        "numberOfBytes": "20"
      },
      "t_contract(IDisbursalContract)56254": {
        "encoding": "inplace",
        "label": "contract IDisbursalContract",
        "numberOfBytes": "20"
      }
    }
  },
  "ast": {
    "absolutePath": "test/examples/MEVOracle/KITNDisburmentScheduler.sol",
    "id": 56462,
    "exportedSymbols": {
      "AdditionalData": [
        52043
      ],
      "Call": [
        52038
      ],
      "CallBreaker": [
        55233
      ],
      "CallBreakerStorage": [
        55545
      ],
      "CallObject": [
        52088
      ],
      "CallObjectHolder": [
        52130
      ],
      "CallObjectHolderStorage": [
        52145
      ],
      "CallObjectLib": [
        52530
      ],
      "CallObjectStorage": [
        52101
      ],
      "CallObjectWithIndex": [
        52108
      ],
      "Context": [
        48078
      ],
      "DATATYPE": [
        52069
      ],
      "ECDSA": [
        48673
      ],
      "FlashLoanData": [
        52051
      ],
      "ICallBreaker": [
        52547
      ],
      "IDisbursalContract": [
        56254
      ],
      "IERC20": [
        48031
      ],
      "IFlashLoan": [
        52563
      ],
      "KITNDisburmentScheduler": [
        56461
      ],
      "Math": [
        49575
      ],
      "Ownable": [
        47301
      ],
      "ReturnObject": [
        52112
      ],
      "ReturnObjectWithIndex": [
        52032
      ],
      "SafeCast": [
        51116
      ],
      "SignedMath": [
        51221
      ],
      "SmarterContract": [
        55845
      ],
      "SolverData": [
        52078
      ],
      "Strings": [
        48307
      ],
      "compactCdHead": [
        54097
      ],
      "compactCdTailSlot": [
        54101
      ],
      "genericDynArrayElementsSlot": [
        54170
      ],
      "genericDynArrayHead": [
        54165
      ],
      "genericElementPtr": [
        54167
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3447:57",
    "nodes": [
      {
        "id": 56240,
        "nodeType": "PragmaDirective",
        "src": "36:23:57",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".26"
        ]
      },
      {
        "id": 56241,
        "nodeType": "ImportDirective",
        "src": "61:40:57",
        "nodes": [],
        "absolutePath": "src/timetravel/CallBreaker.sol",
        "file": "src/timetravel/CallBreaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56462,
        "sourceUnit": 55234,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56242,
        "nodeType": "ImportDirective",
        "src": "102:44:57",
        "nodes": [],
        "absolutePath": "src/timetravel/SmarterContract.sol",
        "file": "src/timetravel/SmarterContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56462,
        "sourceUnit": 55846,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56243,
        "nodeType": "ImportDirective",
        "src": "147:61:57",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56462,
        "sourceUnit": 47302,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56244,
        "nodeType": "ImportDirective",
        "src": "209:71:57",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56462,
        "sourceUnit": 48674,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56254,
        "nodeType": "ContractDefinition",
        "src": "282:126:57",
        "nodes": [
          {
            "id": 56253,
            "nodeType": "FunctionDefinition",
            "src": "317:89:57",
            "nodes": [],
            "functionSelector": "2130d89c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "spendCoins",
            "nameLocation": "326:10:57",
            "parameters": {
              "id": 56251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56247,
                  "mutability": "mutable",
                  "name": "_receivers",
                  "nameLocation": "356:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56253,
                  "src": "337:29:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56245,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "337:7:57",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 56246,
                    "nodeType": "ArrayTypeName",
                    "src": "337:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56250,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "387:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56253,
                  "src": "368:27:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56248,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "368:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 56249,
                    "nodeType": "ArrayTypeName",
                    "src": "368:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "336:60:57"
            },
            "returnParameters": {
              "id": 56252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:57"
            },
            "scope": 56254,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDisbursalContract",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          56254
        ],
        "name": "IDisbursalContract",
        "nameLocation": "292:18:57",
        "scope": 56462,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 56461,
        "nodeType": "ContractDefinition",
        "src": "893:2589:57",
        "nodes": [
          {
            "id": 56266,
            "nodeType": "StructDefinition",
            "src": "960:84:57",
            "nodes": [],
            "canonicalName": "KITNDisburmentScheduler.DisbursalData",
            "members": [
              {
                "constant": false,
                "id": 56262,
                "mutability": "mutable",
                "name": "receivers",
                "nameLocation": "1001:9:57",
                "nodeType": "VariableDeclaration",
                "scope": 56266,
                "src": "991:19:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 56260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56261,
                  "nodeType": "ArrayTypeName",
                  "src": "991:9:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56265,
                "mutability": "mutable",
                "name": "amounts",
                "nameLocation": "1030:7:57",
                "nodeType": "VariableDeclaration",
                "scope": 56266,
                "src": "1020:17:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 56263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56264,
                  "nodeType": "ArrayTypeName",
                  "src": "1020:9:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DisbursalData",
            "nameLocation": "967:13:57",
            "scope": 56461,
            "visibility": "public"
          },
          {
            "id": 56268,
            "nodeType": "VariableDeclaration",
            "src": "1050:26:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "aeec0501",
            "mutability": "mutable",
            "name": "shouldContinue",
            "nameLocation": "1062:14:57",
            "scope": 56461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 56267,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1050:4:57",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 56270,
            "nodeType": "VariableDeclaration",
            "src": "1082:33:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "cd005347",
            "mutability": "mutable",
            "name": "callbreakerAddress",
            "nameLocation": "1097:18:57",
            "scope": 56461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56269,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1082:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 56273,
            "nodeType": "VariableDeclaration",
            "src": "1121:43:57",
            "nodes": [],
            "constant": false,
            "functionSelector": "ceb527bc",
            "mutability": "mutable",
            "name": "disbursalContract",
            "nameLocation": "1147:17:57",
            "scope": 56461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
              "typeString": "contract IDisbursalContract"
            },
            "typeName": {
              "id": 56272,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56271,
                "name": "IDisbursalContract",
                "nameLocations": [
                  "1121:18:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56254,
                "src": "1121:18:57"
              },
              "referencedDeclaration": 56254,
              "src": "1121:18:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
                "typeString": "contract IDisbursalContract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 56304,
            "nodeType": "FunctionDefinition",
            "src": "1171:293:57",
            "nodes": [],
            "body": {
              "id": 56303,
              "nodeType": "Block",
              "src": "1279:185:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 56287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56285,
                      "name": "callbreakerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56270,
                      "src": "1289:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56286,
                      "name": "_callbreaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56275,
                      "src": "1310:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:33:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56288,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:33:57"
                },
                {
                  "expression": {
                    "id": 56293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56289,
                      "name": "disbursalContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56273,
                      "src": "1332:17:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
                        "typeString": "contract IDisbursalContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 56291,
                          "name": "_disbursalContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56277,
                          "src": "1371:18:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56290,
                        "name": "IDisbursalContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56254,
                        "src": "1352:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDisbursalContract_$56254_$",
                          "typeString": "type(contract IDisbursalContract)"
                        }
                      },
                      "id": 56292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1352:38:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
                        "typeString": "contract IDisbursalContract"
                      }
                    },
                    "src": "1332:58:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
                      "typeString": "contract IDisbursalContract"
                    }
                  },
                  "id": 56294,
                  "nodeType": "ExpressionStatement",
                  "src": "1332:58:57"
                },
                {
                  "expression": {
                    "id": 56297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56295,
                      "name": "shouldContinue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56268,
                      "src": "1400:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 56296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1417:4:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1400:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56298,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:21:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56300,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56279,
                        "src": "1450:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56299,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47300,
                      "src": "1431:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 56301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:26:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56302,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:26:57"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 56282,
                    "name": "_callbreaker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56275,
                    "src": "1265:12:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 56283,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 56281,
                  "name": "SmarterContract",
                  "nameLocations": [
                    "1249:15:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55845,
                  "src": "1249:15:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1249:29:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 56280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56275,
                  "mutability": "mutable",
                  "name": "_callbreaker",
                  "nameLocation": "1191:12:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56304,
                  "src": "1183:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56277,
                  "mutability": "mutable",
                  "name": "_disbursalContract",
                  "nameLocation": "1213:18:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56304,
                  "src": "1205:26:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56279,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1241:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56304,
                  "src": "1233:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:66:57"
            },
            "returnParameters": {
              "id": 56284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:0:57"
            },
            "scope": 56461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56324,
            "nodeType": "FunctionDefinition",
            "src": "1470:208:57",
            "nodes": [],
            "body": {
              "id": 56323,
              "nodeType": "Block",
              "src": "1549:129:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 56314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1619:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 56313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1605:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 56311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1609:7:57",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 56312,
                            "nodeType": "ArrayTypeName",
                            "src": "1609:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 56315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1605:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 56319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1658:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 56318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1644:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 56316,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1648:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 56317,
                            "nodeType": "ArrayTypeName",
                            "src": "1648:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                              "typeString": "uint256[]"
                            }
                          }
                        },
                        "id": 56320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1644:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 56310,
                      "name": "DisbursalData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56266,
                      "src": "1566:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DisbursalData_$56266_storage_ptr_$",
                        "typeString": "type(struct KITNDisburmentScheduler.DisbursalData storage pointer)"
                      }
                    },
                    "id": 56321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1594:9:57",
                      "1635:7:57"
                    ],
                    "names": [
                      "receivers",
                      "amounts"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1566:105:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                      "typeString": "struct KITNDisburmentScheduler.DisbursalData memory"
                    }
                  },
                  "functionReturnParameters": 56309,
                  "id": 56322,
                  "nodeType": "Return",
                  "src": "1559:112:57"
                }
              ]
            },
            "functionSelector": "21a88409",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSampleDisbursalData",
            "nameLocation": "1479:22:57",
            "parameters": {
              "id": 56305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:2:57"
            },
            "returnParameters": {
              "id": 56309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56324,
                  "src": "1527:20:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                    "typeString": "struct KITNDisburmentScheduler.DisbursalData"
                  },
                  "typeName": {
                    "id": 56307,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56306,
                      "name": "DisbursalData",
                      "nameLocations": [
                        "1527:13:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56266,
                      "src": "1527:13:57"
                    },
                    "referencedDeclaration": 56266,
                    "src": "1527:13:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DisbursalData_$56266_storage_ptr",
                      "typeString": "struct KITNDisburmentScheduler.DisbursalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1526:22:57"
            },
            "scope": 56461,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56391,
            "nodeType": "FunctionDefinition",
            "src": "1947:648:57",
            "nodes": [],
            "body": {
              "id": 56390,
              "nodeType": "Block",
              "src": "1981:614:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56329,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "1999:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56390,
                      "src": "1991:11:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56328,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1991:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56336,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4b49544e44697362757273616c44617461",
                            "id": 56333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2032:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2bd597e6b50326bd285716c41e0fe5dd5e96ff26cf0b00218c78ae8aee4b44a5",
                              "typeString": "literal_string \"KITNDisbursalData\""
                            },
                            "value": "KITNDisbursalData"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2bd597e6b50326bd285716c41e0fe5dd5e96ff26cf0b00218c78ae8aee4b44a5",
                              "typeString": "literal_string \"KITNDisbursalData\""
                            }
                          ],
                          "expression": {
                            "id": 56331,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2015:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2019:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2015:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2015:37:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56330,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2005:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:48:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1991:62:57"
                },
                {
                  "assignments": [
                    56338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56338,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2076:4:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56390,
                      "src": "2063:17:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 56337,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2063:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56348,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56346,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56329,
                        "src": "2153:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 56342,
                                "name": "callbreakerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56270,
                                "src": "2103:18:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 56341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2095:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 56340,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2095:8:57",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 56343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2095:27:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 56339,
                          "name": "CallBreaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55233,
                          "src": "2083:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CallBreaker_$55233_$",
                            "typeString": "type(contract CallBreaker)"
                          }
                        },
                        "id": 56344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:40:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CallBreaker_$55233",
                          "typeString": "contract CallBreaker"
                        }
                      },
                      "id": 56345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2124:28:57",
                      "memberName": "fetchFromAssociatedDataStore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54559,
                      "src": "2083:69:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (bytes memory)"
                      }
                    },
                    "id": 56347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:74:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2063:94:57"
                },
                {
                  "assignments": [
                    56351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56351,
                      "mutability": "mutable",
                      "name": "disbursalData",
                      "nameLocation": "2189:13:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56390,
                      "src": "2168:34:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                        "typeString": "struct KITNDisburmentScheduler.DisbursalData"
                      },
                      "typeName": {
                        "id": 56350,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 56349,
                          "name": "DisbursalData",
                          "nameLocations": [
                            "2168:13:57"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56266,
                          "src": "2168:13:57"
                        },
                        "referencedDeclaration": 56266,
                        "src": "2168:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DisbursalData_$56266_storage_ptr",
                          "typeString": "struct KITNDisburmentScheduler.DisbursalData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56354,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56338,
                        "src": "2216:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 56355,
                            "name": "DisbursalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56266,
                            "src": "2223:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DisbursalData_$56266_storage_ptr_$",
                              "typeString": "type(struct KITNDisburmentScheduler.DisbursalData storage pointer)"
                            }
                          }
                        ],
                        "id": 56356,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2222:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DisbursalData_$56266_storage_ptr_$",
                          "typeString": "type(struct KITNDisburmentScheduler.DisbursalData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DisbursalData_$56266_storage_ptr_$",
                          "typeString": "type(struct KITNDisburmentScheduler.DisbursalData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 56352,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2205:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 56353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2209:6:57",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2205:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 56357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:33:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                      "typeString": "struct KITNDisburmentScheduler.DisbursalData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2168:70:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56362,
                          "name": "disbursalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56351,
                          "src": "2277:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                            "typeString": "struct KITNDisburmentScheduler.DisbursalData memory"
                          }
                        },
                        "id": 56363,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2291:9:57",
                        "memberName": "receivers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56262,
                        "src": "2277:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 56364,
                          "name": "disbursalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56351,
                          "src": "2302:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisbursalData_$56266_memory_ptr",
                            "typeString": "struct KITNDisburmentScheduler.DisbursalData memory"
                          }
                        },
                        "id": 56365,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2316:7:57",
                        "memberName": "amounts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56265,
                        "src": "2302:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 56359,
                        "name": "disbursalContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56273,
                        "src": "2248:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisbursalContract_$56254",
                          "typeString": "contract IDisbursalContract"
                        }
                      },
                      "id": 56361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2266:10:57",
                      "memberName": "spendCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56253,
                      "src": "2248:28:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 56366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:76:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56367,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:76:57"
                },
                {
                  "assignments": [
                    56370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56370,
                      "mutability": "mutable",
                      "name": "callObj",
                      "nameLocation": "2353:7:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56390,
                      "src": "2335:25:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallObject_$52088_memory_ptr",
                        "typeString": "struct CallObject"
                      },
                      "typeName": {
                        "id": 56369,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 56368,
                          "name": "CallObject",
                          "nameLocations": [
                            "2335:10:57"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52088,
                          "src": "2335:10:57"
                        },
                        "referencedDeclaration": 52088,
                        "src": "2335:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallObject_$52088_storage_ptr",
                          "typeString": "struct CallObject"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56384,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 56372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 56375,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2425:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KITNDisburmentScheduler_$56461",
                              "typeString": "contract KITNDisburmentScheduler"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KITNDisburmentScheduler_$56461",
                              "typeString": "contract KITNDisburmentScheduler"
                            }
                          ],
                          "id": 56374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2417:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2417:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2417:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 56377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2449:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "7665726966795369676e617475726528627974657329",
                            "id": 56380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2505:24:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f80af984fd691e835ad422eab3572dcf570727fc5f9175f31659f9aa9b2ff0c1",
                              "typeString": "literal_string \"verifySignature(bytes)\""
                            },
                            "value": "verifySignature(bytes)"
                          },
                          {
                            "id": 56381,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56338,
                            "src": "2531:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f80af984fd691e835ad422eab3572dcf570727fc5f9175f31659f9aa9b2ff0c1",
                              "typeString": "literal_string \"verifySignature(bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 56378,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2481:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2485:19:57",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2481:23:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 56382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2481:55:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56371,
                      "name": "CallObject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52088,
                      "src": "2363:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_CallObject_$52088_storage_ptr_$",
                        "typeString": "type(struct CallObject storage pointer)"
                      }
                    },
                    "id": 56383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2388:6:57",
                      "2411:4:57",
                      "2444:3:57",
                      "2470:9:57"
                    ],
                    "names": [
                      "amount",
                      "addr",
                      "gas",
                      "callvalue"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2363:184:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallObject_$52088_memory_ptr",
                      "typeString": "struct CallObject memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2335:212:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56386,
                        "name": "callObj",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56370,
                        "src": "2577:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallObject_$52088_memory_ptr",
                          "typeString": "struct CallObject memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 56387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2586:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallObject_$52088_memory_ptr",
                          "typeString": "struct CallObject memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 56385,
                      "name": "assertFutureCallTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        55754,
                        55803
                      ],
                      "referencedDeclaration": 55803,
                      "src": "2558:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CallObject_$52088_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct CallObject memory,uint256) view"
                      }
                    },
                    "id": 56388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:30:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56389,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:30:57"
                }
              ]
            },
            "documentation": {
              "id": 56325,
              "nodeType": "StructuredDocumentation",
              "src": "1684:258:57",
              "text": " @notice fetch params for spendcoins at MEVTime, get the correct arg from the data store and\n  execute spendcoins on the disbursal contract. After disbursal schedule a next call to itself\n  in the LaminatedProxy of the CleanApp."
            },
            "functionSelector": "c6a02b7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disburseKITNs",
            "nameLocation": "1956:13:57",
            "parameters": {
              "id": 56326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:2:57"
            },
            "returnParameters": {
              "id": 56327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:57"
            },
            "scope": 56461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56403,
            "nodeType": "FunctionDefinition",
            "src": "2601:111:57",
            "nodes": [],
            "body": {
              "id": 56402,
              "nodeType": "Block",
              "src": "2663:49:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 56400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56398,
                      "name": "shouldContinue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56268,
                      "src": "2673:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56399,
                      "name": "_shouldContinue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56393,
                      "src": "2690:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2673:32:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56401,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:32:57"
                }
              ]
            },
            "functionSelector": "06da6b6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56395,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2653:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47220,
                  "src": "2653:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2653:9:57"
              }
            ],
            "name": "setContinue",
            "nameLocation": "2610:11:57",
            "parameters": {
              "id": 56394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56393,
                  "mutability": "mutable",
                  "name": "_shouldContinue",
                  "nameLocation": "2627:15:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56403,
                  "src": "2622:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:22:57"
            },
            "returnParameters": {
              "id": 56397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2663:0:57"
            },
            "scope": 56461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56444,
            "nodeType": "FunctionDefinition",
            "src": "2718:581:57",
            "nodes": [],
            "body": {
              "id": 56443,
              "nodeType": "Block",
              "src": "2776:523:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56409,
                      "mutability": "mutable",
                      "name": "ethSignedMessageHash",
                      "nameLocation": "2794:20:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56443,
                      "src": "2786:28:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56408,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2786:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56413,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56411,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56405,
                        "src": "2841:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 56410,
                      "name": "getEthSignedMessageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56460,
                      "src": "2817:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) view returns (bytes32)"
                      }
                    },
                    "id": 56412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:29:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2786:60:57"
                },
                {
                  "assignments": [
                    56415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56415,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "2865:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56443,
                      "src": "2857:11:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56414,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2857:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56422,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "436c65616e4170705369676e6174757265",
                            "id": 56419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2898:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_357785a920be2d29aba411d3ea566fe2f90a5469044cacbffbe037cd4b756b2f",
                              "typeString": "literal_string \"CleanAppSignature\""
                            },
                            "value": "CleanAppSignature"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_357785a920be2d29aba411d3ea566fe2f90a5469044cacbffbe037cd4b756b2f",
                              "typeString": "literal_string \"CleanAppSignature\""
                            }
                          ],
                          "expression": {
                            "id": 56417,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2881:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2885:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2881:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2881:37:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56416,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2871:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2871:48:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2857:62:57"
                },
                {
                  "assignments": [
                    56424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56424,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "2942:9:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56443,
                      "src": "2929:22:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 56423,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2929:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56434,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56432,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56415,
                        "src": "3024:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 56428,
                                "name": "callbreakerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56270,
                                "src": "2974:18:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 56427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2966:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 56426,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2966:8:57",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 56429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2966:27:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 56425,
                          "name": "CallBreaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55233,
                          "src": "2954:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CallBreaker_$55233_$",
                            "typeString": "type(contract CallBreaker)"
                          }
                        },
                        "id": 56430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2954:40:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CallBreaker_$55233",
                          "typeString": "contract CallBreaker"
                        }
                      },
                      "id": 56431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2995:28:57",
                      "memberName": "fetchFromAssociatedDataStore",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54559,
                      "src": "2954:69:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (bytes memory)"
                      }
                    },
                    "id": 56433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2954:74:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2929:99:57"
                },
                {
                  "assignments": [
                    56436,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56436,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "3147:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 56443,
                      "src": "3139:14:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56435,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3139:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 56442,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56439,
                        "name": "ethSignedMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56409,
                        "src": "3175:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56440,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56424,
                        "src": "3197:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 56437,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48673,
                        "src": "3158:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$48673_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 56438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3164:10:57",
                      "memberName": "tryRecover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48407,
                      "src": "3158:16:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$48317_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
                      }
                    },
                    "id": 56441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:49:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$48317_$",
                      "typeString": "tuple(address,enum ECDSA.RecoverError)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3138:69:57"
                }
              ]
            },
            "functionSelector": "f80af984",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifySignature",
            "nameLocation": "2727:15:57",
            "parameters": {
              "id": 56406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56405,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2758:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56444,
                  "src": "2743:19:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56404,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:21:57"
            },
            "returnParameters": {
              "id": 56407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:0:57"
            },
            "scope": 56461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56460,
            "nodeType": "FunctionDefinition",
            "src": "3305:175:57",
            "nodes": [],
            "body": {
              "id": 56459,
              "nodeType": "Block",
              "src": "3387:93:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 56454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3431:34:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 56455,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56446,
                            "src": "3467:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 56452,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3414:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3418:12:57",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3414:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3414:58:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56451,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3404:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3404:69:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 56450,
                  "id": 56458,
                  "nodeType": "Return",
                  "src": "3397:76:57"
                }
              ]
            },
            "functionSelector": "f9aea466",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthSignedMessageHash",
            "nameLocation": "3314:23:57",
            "parameters": {
              "id": 56447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56446,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3351:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 56460,
                  "src": "3338:17:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56445,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:19:57"
            },
            "returnParameters": {
              "id": 56450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56460,
                  "src": "3378:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3377:9:57"
            },
            "scope": 56461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56256,
              "name": "SmarterContract",
              "nameLocations": [
                "929:15:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55845,
              "src": "929:15:57"
            },
            "id": 56257,
            "nodeType": "InheritanceSpecifier",
            "src": "929:15:57"
          },
          {
            "baseName": {
              "id": 56258,
              "name": "Ownable",
              "nameLocations": [
                "946:7:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47301,
              "src": "946:7:57"
            },
            "id": 56259,
            "nodeType": "InheritanceSpecifier",
            "src": "946:7:57"
          }
        ],
        "canonicalName": "KITNDisburmentScheduler",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 56255,
          "nodeType": "StructuredDocumentation",
          "src": "410:482:57",
          "text": " @notice This is an POC example of a schedular which also fetches data at execution time from the SOLVER\n  It schedules token dirbursal of KITN tokens and after evert disbursal schedule the next call for the same\n  acting like an on chain cron job for distributing tokens to its users. Now, since the list of recievers keeps\n  changing, the list of users and amounts are provided by the solver at execution time based on reports generated\n  in the CleanApp backend"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          56461,
          47301,
          48078,
          55845
        ],
        "name": "KITNDisburmentScheduler",
        "nameLocation": "902:23:57",
        "scope": 56462,
        "usedErrors": [
          55554,
          55557,
          55560,
          55563,
          55566,
          55569,
          55572,
          55575
        ],
        "usedEvents": [
          47202
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 57
}